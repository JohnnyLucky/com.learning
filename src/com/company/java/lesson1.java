package com.company.java;

public class lesson1 {
    public static void main(String[] args) {

        // Примитивные типы данных хранятся в STACK памяти.

        // Целые числа.
        byte a;       // 1 байт  (2 в 8)   128 + 127
        short b;      // 2 байта (2 в 16)  32768 + 32767
        int c;        // 4 байта (2 в 32)  2147483648  + 2147483648
        long d;       // 8 байт  (2 в 64)  9223372036854775808 до 9223372036854775807

        // Вещественные числа.
        float e;      // 4 байт (2 в 32) от 1.4e-45f до 3.4e+38f
        double f;     // 8 байт (2 в 64) от 4.9e-324 до 1.7e+308

        // Символьные.
        char g;       // 2 байта (2 в 16) от 0 до 65536 символы таблицы UTF-16

        // Логические.
        boolean h;    // 1 (в массивах), 32 (не в массивах используется int) true или false

        // Ссылочные типы данных хранятся в STACK памяти, а их объекты в HEAP памяти и являются классами.

        // Строки.
        String i; // "значение1" + "значение2" конкатенация.  " " пробел.
        String str = "" + 128;  // Преобразование числа в строку
        int l = Integer.parseInt("221");  // Преобразовать строку в число
        String name = "Rome";
        int count = name.length(); // Метод length() позволяет узнать длину строки – сколько в ней символов.
                                   // Метод toLowerCase() позволяет преобразовать все символы строки в маленькие (строчные)
                                   // Метод toUpperCase() позволяет преобразовать все символы строки в большие (заглавные)

        // Обертки.
        // Если требуется создать ссылку на один из примитивных типов данных, необходимо использовать соответствующий класс-обертку.
        /* byte    (Byte)
           short	(Short)
           int	    (Integer)
           long	(Long)
           char	(Character)
           float	(Float)
           double	(Double)
           boolean	(Boolean)
        */

        // Приведение типов

        //Перевод short в int или наоборот, можно сделать двумя путями: явным и неявным:
        int j = 3;
        short k = 7;
        j = k; //Неявное приведение
        j = (int) k; //Явное приведение
        k = (short) j; //Явное приведение

    }

}
